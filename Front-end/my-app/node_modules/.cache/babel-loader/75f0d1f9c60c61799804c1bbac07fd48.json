{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\corta_000\\\\Desktop\\\\rendus-master\\\\Front-end\\\\my-app\\\\src\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport './Room.css';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport Chat from \"./Chat/Chat\";\nimport authService from './services/auth.service';\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Container;\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n_c2 = Row;\nconst Video = styled.video`\n  border: 1px solid blue;\n  width: 50%;\n  height: 50%;\n`;\n_c3 = Video;\n\nfunction Room() {\n  _s();\n\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io.connect(\"/\");\n\n    if (navigator.mediaDevices !== undefined) {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        setStream(stream);\n\n        if (userVideo.current) {\n          userVideo.current.srcObject = stream;\n        }\n      });\n    } else {\n      console.log(navigator.mediaCapabilities);\n      console.log(navigator.mediaDevices);\n      navigator.mediaCapabilities.decodingInfo({\n        type: 'file',\n        audio: {\n          contentType: \"audio/mp3\",\n          channels: 2,\n          bitrate: 132700,\n          samplerate: 5200\n        }\n      }).then(function (result) {\n        console.log('This configuration is ' + (result.supported ? '' : 'not ') + 'supported, ' + (result.smooth ? '' : 'not ') + 'smooth, and ' + (result.powerEfficient ? '' : 'not ') + 'power efficient.');\n      });\n    }\n\n    socket.current.on(\"yourID\", id => {\n      setYourID(id);\n    });\n    socket.current.on(\"allUsers\", users => {\n      setUsers(users);\n    });\n    socket.current.on(\"hey\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n\n  function callPeer(id) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      config: {\n        iceServers: [{\n          urls: \"stun:numb.viagenie.ca\",\n          username: \"sultan1640@gmail.com\",\n          credential: \"98376683\"\n        }, {\n          urls: \"turn:numb.viagenie.ca\",\n          username: \"sultan1640@gmail.com\",\n          credential: \"98376683\"\n        }]\n      },\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: yourID\n      });\n    });\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n    socket.current.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n  }\n\n  function acceptCall() {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"acceptCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n\n  if (stream) {\n    UserVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      muted: true,\n      ref: userVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n  let PartnerVideo;\n\n  if (callAccepted) {\n    PartnerVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      ref: partnerVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n  let incomingCall;\n\n  if (receivingCall) {\n    incomingCall = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [caller, \" is calling you\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: acceptCall,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n  this.state = {\n    currentUser: authService.getCurrentUser()\n  };\n  console.log(currentUser);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [UserVideo, PartnerVideo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: Object.keys(users).map(key => {\n        if (key === yourID) {\n          return null;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => callPeer(key),\n          children: [\"Call \", key]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: incomingCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Room, \"cS+RVRlORmnqKPnZY5LXZZa7HbQ=\");\n\n_c4 = Room;\nexport default Room;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"Room\");","map":{"version":3,"sources":["C:/Users/corta_000/Desktop/rendus-master/Front-end/my-app/src/Room.js"],"names":["React","useEffect","useState","useRef","io","Peer","styled","Chat","authService","Container","div","Row","Video","video","Room","yourID","setYourID","users","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","userVideo","partnerVideo","socket","current","connect","navigator","mediaDevices","undefined","getUserMedia","audio","then","srcObject","console","log","mediaCapabilities","decodingInfo","type","contentType","channels","bitrate","samplerate","result","supported","smooth","powerEfficient","on","id","data","from","signal","callPeer","peer","initiator","trickle","config","iceServers","urls","username","credential","emit","userToCall","signalData","acceptCall","to","UserVideo","PartnerVideo","incomingCall","state","currentUser","getCurrentUser","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './Room.css';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nimport Chat from \"./Chat/Chat\";\nimport authService from './services/auth.service';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Video = styled.video`\n  border: 1px solid blue;\n  width: 50%;\n  height: 50%;\n`;\n\nfunction Room() {\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n\n  useEffect(() => {\n    socket.current = io.connect(\"/\");\n    if (navigator.mediaDevices !== undefined) {\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\n        setStream(stream);\n        if (userVideo.current) {\n          userVideo.current.srcObject = stream;\n        }\n      })\n    } else {\n      console.log(navigator.mediaCapabilities);\n      console.log(navigator.mediaDevices);\n      navigator.mediaCapabilities.decodingInfo({\n        type : 'file',\n        audio : {\n            contentType : \"audio/mp3\",\n            channels : 2,\n            bitrate : 132700,\n            samplerate : 5200\n        }\n    }).then(function(result) {\n      console.log('This configuration is ' +\n            (result.supported ? '' : 'not ') + 'supported, ' +\n            (result.smooth ? '' : 'not ') + 'smooth, and ' +\n            (result.powerEfficient ? '' : 'not ') + 'power efficient.')\n    });\n    }\n\n    socket.current.on(\"yourID\", (id) => {\n      setYourID(id);\n    })\n    socket.current.on(\"allUsers\", (users) => {\n      setUsers(users);\n    })\n\n    socket.current.on(\"hey\", (data) => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    })\n  }, []);\n\n  function callPeer(id) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      config: {\n\n        iceServers: [\n            {\n                urls: \"stun:numb.viagenie.ca\",\n                username: \"sultan1640@gmail.com\",\n                credential: \"98376683\"\n            },\n            {\n                urls: \"turn:numb.viagenie.ca\",\n                username: \"sultan1640@gmail.com\",\n                credential: \"98376683\"\n            }\n        ]\n    },\n      stream: stream,\n    });\n\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"callUser\", { userToCall: id, signalData: data, from: yourID })\n    })\n\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n    });\n\n    socket.current.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    })\n\n  }\n\n  function acceptCall() {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream,\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"acceptCall\", { signal: data, to: caller })\n    })\n\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n  if (stream) {\n    UserVideo = (\n      <Video playsInline muted ref={userVideo} autoPlay />\n    );\n  }\n\n  let PartnerVideo;\n  if (callAccepted) {\n    PartnerVideo = (\n      <Video playsInline ref={partnerVideo} autoPlay />\n    );\n  }\n\n  let incomingCall;\n  if (receivingCall) {\n    incomingCall = (\n      <div>\n        <h1>{caller} is calling you</h1>\n        <button onClick={acceptCall}>Accept</button>\n      </div>\n    )\n  }\n  this.state = {\n    currentUser: authService.getCurrentUser()\n  };\n  console.log(currentUser);\n  return (\n    <Container>\n      <Row>\n        {UserVideo}\n        {PartnerVideo}\n      </Row>\n      <Chat/>\n      <Row>\n        {Object.keys(users).map(key => {\n          if (key === yourID) {\n            return null;\n          }\n          return (\n            <button onClick={() => callPeer(key)}>Call {key}</button>\n          );\n        })}\n      </Row>\n      <Row>\n        {incomingCall}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}