{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\louis\\\\Documents\\\\info\\\\S3\\\\UE3\\\\M3301 - Projet\\\\rendus\\\\rendus\\\\Front-end\\\\my-app\\\\src\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport TextContainer from '../TextContainer/TextContainer';\nimport Messages from '../Messages/Messages';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport authService from '../services/auth.service';\nimport './Chat.css';\nconst ENDPOINT = 'localhost:8080';\nlet socket;\n\nconst Chat = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    var username_room = {\n      name: authService.getCurrentUser().username,\n      room: \"room\"\n    };\n    const {\n      name,\n      room\n    } = username_room;\n    socket = io(ENDPOINT);\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      console.log(name);\n\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextContainer, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"NKZGbzfWHlS0Y+OfA88k1uWyNPI=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/louis/Documents/info/S3/UE3/M3301 - Projet/rendus/rendus/Front-end/my-app/src/Chat/Chat.js"],"names":["React","useState","useEffect","io","TextContainer","Messages","InfoBar","Input","authService","ENDPOINT","socket","Chat","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","username_room","getCurrentUser","username","emit","error","console","log","alert","on","sendMessage","event","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,OAAO,YAAP;AAEA,MAAMC,QAAQ,GAAG,gBAAjB;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,aAAa,GAAG;AAACV,MAAAA,IAAI,EAAEJ,WAAW,CAACe,cAAZ,GAA6BC,QAApC;AAA8CV,MAAAA,IAAI,EAAE;AAApD,KAApB;AACA,UAAM;AAAEF,MAAAA,IAAF;AAAOE,MAAAA;AAAP,QAAgBQ,aAAtB;AAEAZ,IAAAA,MAAM,GAAGP,EAAE,CAACM,QAAD,CAAX;AAEAM,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAF,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAAEb,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCY,KAAD,IAAW;AAC7CC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;;AACA,UAAGc,KAAH,EAAU;AACRG,QAAAA,KAAK,CAACH,KAAD,CAAL;AACD;AACF,KALD;AAMD,GAfQ,EAeN,CAACjB,QAAD,CAfM,CAAT;AAiBAP,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACoB,EAAP,CAAU,SAAV,EAAqBZ,OAAO,IAAI;AAC9BG,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAE,GAAGA,QAAL,EAAeF,OAAf,CAAb,CAAX;AACD,KAFD;AAIAR,IAAAA,MAAM,CAACoB,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEd,MAAAA;AAAF,KAAD,KAAe;AACnCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAGH,GARU,EAQR,EARQ,CAAT;;AAUA,QAAMe,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGf,OAAH,EAAY;AACVR,MAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GAND;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEL;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEM,QAApB;AAA8B,QAAA,IAAI,EAAER;AAApC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEM,OAAhB;AAAyB,QAAA,UAAU,EAAEC,UAArC;AAAiD,QAAA,WAAW,EAAEY;AAA9D;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEf;AAAtB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnDD;;GAAML,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport TextContainer from '../TextContainer/TextContainer';\r\nimport Messages from '../Messages/Messages';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport authService from '../services/auth.service';\r\n\r\nimport './Chat.css';\r\n\r\nconst ENDPOINT = 'localhost:8080';\r\n\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var username_room = {name: authService.getCurrentUser().username, room: \"room\"};\r\n    const { name,room } = username_room;\r\n\r\n    socket = io(ENDPOINT);\r\n    \r\n    setRoom(room);\r\n    setName(name);\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      console.log(name);\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT]);\r\n\r\n  useEffect(() => {\r\n    socket.on('message', message => {\r\n      setMessages(messages => [ ...messages, message ]);\r\n    });\r\n    \r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n}, []);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n      </div>\r\n      <TextContainer users={users}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}