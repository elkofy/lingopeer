{"ast":null,"code":"import _toConsumableArray from\"C:/Users/nassi/deploy/rendus/Front-end/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/nassi/deploy/rendus/Front-end/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import io from\"socket.io-client\";import TextContainer from'../TextContainer/TextContainer';import Messages from'../Messages/Messages';import InfoBar from'../InfoBar/InfoBar';import Input from'../Input/Input';import authService from'../../services/auth.service';import'./Chat.css';var ENDPOINT='localhost:8080';var socket;var Chat=function Chat(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),room=_useState4[0],setRoom=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),users=_useState6[0],setUsers=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),messages=_useState10[0],setMessages=_useState10[1];useEffect(function(){var username_room={name:authService.getCurrentUser().username,room:\"room\"};var name=username_room.name,room=username_room.room;socket=io(ENDPOINT);setRoom(room);setName(name);socket.emit('join',{name:name,room:room},function(error){console.log(name);if(error){alert(error);}});},[ENDPOINT]);useEffect(function(){socket.on('message',function(message){setMessages(function(messages){return[].concat(_toConsumableArray(messages),[message]);});});socket.on(\"roomData\",function(_ref){var users=_ref.users;setUsers(users);});},[]);var sendMessage=function sendMessage(event){event.preventDefault();if(message){socket.emit('sendMessage',message,function(){return setMessage('');});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"outerContainer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(InfoBar,{room:room}),/*#__PURE__*/_jsx(Messages,{messages:messages,name:name}),/*#__PURE__*/_jsx(Input,{message:message,setMessage:setMessage,sendMessage:sendMessage})]}),/*#__PURE__*/_jsx(TextContainer,{users:users})]});};export default Chat;","map":{"version":3,"sources":["C:/Users/nassi/deploy/rendus/Front-end/my-app/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","io","TextContainer","Messages","InfoBar","Input","authService","ENDPOINT","socket","Chat","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","username_room","getCurrentUser","username","emit","error","console","log","alert","on","sendMessage","event","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport TextContainer from '../TextContainer/TextContainer';\r\nimport Messages from '../Messages/Messages';\r\nimport InfoBar from '../InfoBar/InfoBar';\r\nimport Input from '../Input/Input';\r\nimport authService from '../../services/auth.service';\r\n\r\nimport './Chat.css';\r\n\r\nconst ENDPOINT = 'localhost:8080';\r\n\r\nlet socket;\r\n\r\nconst Chat = () => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    var username_room = {name: authService.getCurrentUser().username, room: \"room\"};\r\n    const { name,room } = username_room;\r\n\r\n    socket = io(ENDPOINT);\r\n    \r\n    setRoom(room);\r\n    setName(name);\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      console.log(name);\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT]);\r\n\r\n  useEffect(() => {\r\n    socket.on('message', message => {\r\n      setMessages(messages => [ ...messages, message ]);\r\n    });\r\n    \r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n}, []);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n      </div>\r\n      <TextContainer users={users}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}