{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\louis\\\\Documents\\\\info\\\\S3\\\\UE3\\\\M3301 - Projet\\\\rendus\\\\rendus\\\\REACT-APP\\\\my-app\\\\src\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Container;\nconst Row = styled.div`\n  display: flex;\n  width: 100%;\n`;\n_c2 = Row;\nconst Video = styled.video`\n  border: 1px solid blue;\n  width: 50%;\n  height: 50%;\n`;\n_c3 = Video;\n\nfunction App() {\n  _s();\n\n  const [yourID, setYourID] = useState(\"\");\n  const [users, setUsers] = useState({});\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const userVideo = useRef();\n  const partnerVideo = useRef();\n  const socket = useRef();\n  useEffect(() => {\n    socket.current = io.connect(\"/\");\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    });\n    socket.current.on(\"yourID\", id => {\n      setYourID(id);\n    });\n    socket.current.on(\"allUsers\", users => {\n      setUsers(users);\n    });\n    socket.current.on(\"hey\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n\n  function callPeer(id) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      config: {\n        iceServers: [{\n          urls: \"stun:numb.viagenie.ca\",\n          username: \"sultan1640@gmail.com\",\n          credential: \"98376683\"\n        }, {\n          urls: \"turn:numb.viagenie.ca\",\n          username: \"sultan1640@gmail.com\",\n          credential: \"98376683\"\n        }]\n      },\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: yourID\n      });\n    });\n    peer.on(\"stream\", stream => {\n      if (partnerVideo.current) {\n        partnerVideo.current.srcObject = stream;\n      }\n\n      socket.current.on(\"callAccepted\", signal => {\n        setCallAccepted(true);\n        peer.signal(signal);\n      });\n    });\n  }\n\n  function acceptCall() {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.current.emit(\"acceptCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      partnerVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n  }\n\n  let UserVideo;\n\n  if (stream) {\n    UserVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      muted: true,\n      ref: userVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  }\n\n  let PartnerVideo;\n\n  if (callAccepted) {\n    PartnerVideo = /*#__PURE__*/_jsxDEV(Video, {\n      playsInline: true,\n      ref: partnerVideo,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n  let incomingCall;\n\n  if (receivingCall) {\n    incomingCall = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [caller, \" is calling you\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: acceptCall,\n        children: \"Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [UserVideo, PartnerVideo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: Object.keys(users).map(key => {\n        if (key === yourID) {\n          return null;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => callPeer(key),\n          children: [\"Call \", key]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: incomingCall\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cS+RVRlORmnqKPnZY5LXZZa7HbQ=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Video\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/louis/Documents/info/S3/UE3/M3301 - Projet/rendus/rendus/REACT-APP/my-app/src/Room.js"],"names":["React","useEffect","useState","useRef","io","Peer","styled","Container","div","Row","Video","video","App","yourID","setYourID","users","setUsers","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","userVideo","partnerVideo","socket","current","connect","navigator","mediaDevices","getUserMedia","audio","then","srcObject","on","id","data","from","signal","callPeer","peer","initiator","trickle","config","iceServers","urls","username","credential","emit","userToCall","signalData","acceptCall","to","UserVideo","PartnerVideo","incomingCall","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport './App.css';\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nconst Video = styled.video`\r\n  border: 1px solid blue;\r\n  width: 50%;\r\n  height: 50%;\r\n`;\r\n\r\nfunction App() {\r\n  const [yourID, setYourID] = useState(\"\");\r\n  const [users, setUsers] = useState({});\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n  const socket = useRef();\r\n\r\n  useEffect(() => {\r\n    socket.current = io.connect(\"/\");\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n    })\r\n\r\n    socket.current.on(\"yourID\", (id) => {\r\n      setYourID(id);\r\n    })\r\n    socket.current.on(\"allUsers\", (users) => {\r\n      setUsers(users);\r\n    })\r\n\r\n    socket.current.on(\"hey\", (data) => {\r\n     setReceivingCall(true);\r\n     setCaller(data.from);\r\n     setCallerSignal(data.signal);\r\n    })\r\n  }, []);\r\n\r\n  function callPeer(id) {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      config: {\r\n\r\n        iceServers: [\r\n            {\r\n                urls: \"stun:numb.viagenie.ca\",\r\n                username: \"sultan1640@gmail.com\",\r\n                credential: \"98376683\"\r\n            },\r\n            {\r\n                urls: \"turn:numb.viagenie.ca\",\r\n                username: \"sultan1640@gmail.com\",\r\n                credential: \"98376683\"\r\n            }\r\n        ]\r\n    },\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", data => {\r\n      socket.current.emit(\"callUser\", {userToCall: id, signalData: data, from: yourID})\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      if (partnerVideo.current) {\r\n        partnerVideo.current.srcObject = stream;\r\n      }\r\n\r\n      socket.current.on(\"callAccepted\", signal => {\r\n        setCallAccepted(true);\r\n        peer.signal(signal);\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  function acceptCall() {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({\r\n      initiator : false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n\r\n    peer.on(\"signal\", data => {\r\n      socket.current.emit(\"acceptCall\", {signal: data, to: caller })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      partnerVideo.current.srcObject = stream;\r\n    })\r\n\r\n    peer.signal(callerSignal);\r\n  }\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <Video playsInline muted ref={userVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted) {\r\n    PartnerVideo = (\r\n      <Video playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let incomingCall;\r\n  if (receivingCall) {\r\n    incomingCall = (\r\n      <div>\r\n        <h1>{caller} is calling you</h1>\r\n        <button onClick={acceptCall}>Accept</button>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {UserVideo}\r\n        {PartnerVideo}\r\n      </Row>\r\n      <Row>\r\n        {Object.keys(users).map(key => {\r\n          if (key === yourID) {\r\n            return null;\r\n          }\r\n          return (\r\n            <button onClick={() => callPeer(key)}>Call {key}</button>\r\n          );\r\n        })}\r\n      </Row>\r\n      <Row>\r\n        {incomingCall}\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}